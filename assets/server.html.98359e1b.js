const a=JSON.parse(`{"key":"v-59b9c3ff","path":"/sundry/server.html","title":"服务端软件","lang":"zh-CN","frontmatter":{"title":"服务端软件","article":false,"description":"# Tomcat 前置知识 HTML CSS JavaScript Java HTTP Tomcat 是 Apache 公司开发的一款免费的 Web 应用服务器，虽然它为 HTML 页面提供服务，但实际上运行的是 JSP 和 Servlet。因为处理静态 HTML 的能力不如其他服务器，所以它只能算是一个运行 JSP 和 Servlet 的容器，能够单独处理 HTML 页面 从官网下载它，Tomcat 依赖于 Java 运行，在这里查看匹配当前 Java 版本的 Tomcat。如果没有配置JAVA_HOME系统环境变量，一定要配置，它为 Tomcat 指明 Java 所在的目录，否则启动时只能看到一闪而过的窗口 在bin目录下，找到startup.bat（如果是 Windows）双击它，会弹出一个终端窗口启动 Tomcat（如果没有问题）。这时不要关闭它，打开浏览器输入localhost:8080访问，出现下图就代表 Tomcat 以及相关配置没有问题 不要直接关闭打开中的终端来停止 Tomcat，应该双击bin目录下的shutdown.bat来处理 掌握 Tomcat 的一些目录是非常有必要的 bin：存放一些可执行命令，比如启动服务器和关闭服务器 conf：存放服务器启动时相关的配置，核心配置文件server.xml lib：运行时依赖的库 logs：存放执行日志信息的目录 temps：临时文件夹目录 webapps：发布应用的目录 work：处理 JSP 的工作目录 最重要的是webapps，通过网址访问的路径都是这个目录下的应用，如果打开这个目录，会发现 Tomcat 自带几个 Web 应用，通过localhost:8080会默认指向ROOT目录中的应用 一个 Web 应用的目录结构是这样的： WebName │ index.jsp │ ... └─WEB-INF │ web.xml # 当前整个 Web 应用的核心配置文件 │ ├─classes # 编译后的 java 字节码文件 └─lib # jar 包 警告 host-manager、manager、ROOT这三个项目最好不要删，其它的都可以删掉以增加启动速度 # 核心配置 server.xml是 Tomcat 的核心配置文件 &lt;Server> &lt;Service name=\\"catalina\\"> &lt;Connector connectionTimeout=\\"20000\\" port=\\"8080\\" protocol=\\"HTTP/1.1\\" redirectPort=\\"8443\\"/> &lt;Connector port=\\"8009\\" protocol=\\"AJP/1.3\\" redirectPort=\\"8443\\"/> &lt;Engine defaultHost=\\"Localhost\\" name=\\"catalina\\"> &lt;Host appBase=\\"webapps\\" autoDeploy=\\"true\\" name=\\"LocaLhost\\" unpackwARs=\\"true\\"> &lt;Context docBase=\\"project1\\" path=\\" /project1\\" reloadable=\\"true\\" /> &lt;Context docBase=\\"project2\\" path=\\"/project2\\" reloadable=\\"true\\" /> &lt;/Host> &lt;Host appBase=\\"webapps\\" autoDeploy=\\"true\\" name=\\"m. myxq.com\\" unpackWARs=\\"true\\"> &lt;Context docBase=\\"project1\\" path=\\"/project1\\" reloadable=\\"true\\" > &lt;Context docBase=\\"project2\\" path=\\"/project2\\" reloadable=\\"true\\" > &lt;/Host> &lt;/Engine> &lt;/Service> &lt;/Server> Server - 整个Server容器组合，可以包含一个或者多个 Service Service - 由一个或者多个 Connector 组成，以及一个 Engine，负责处理所有的 Connector 所获得的客户请求 Connector - 客户端与程序交互组件，负责接受请求以及向客户端返回响应 Engine - 处理连接器接受到请求 Host - 虚拟主机 Context - 一个 Context 对应一个 Web Application # 虚拟目录 &lt;Context docBase=\\"\\" path=\\"\\" reloadable=\\"\\" source=\\"\\"/> docBase：Web 应用的文件目录 path：URL 入口 reloadable：字节码改变时是否重新加载 # Servlet Servlet 提供处理处理请求和响应的 API，由servlet-api.jar提供对应的接口，每一个实现该接口的 Java 类都是一个 Servlet 处理程序。在运行对应的 Servlet 时，不需要main方法，会被编译成字节码文件放入WEB-INF -&gt; classes目录下根据请求去执行对应的 Servlet 程序 Tomcat 启动时会将网页中的 URL 映射成 webapps 中的应用目录，一个 URL 对应一个 Servlet，当请求这个 URL 时，会执行&lt;servlet&gt;标签中对应的 java 程序，这个程序是编译过的字节码文件，存放在classes目录，但是无法访问 WEB-INF 目录下的文件 如果想要将 URL 映射成对应的 Servlet 程序，则应该在web.xml中进行配置，比如： &lt;web-app> &lt;servlet> &lt;servlet-name>hello&lt;/servlet-name> &lt;servlet-class>HelloServlet&lt;/servlet-class> &lt;/servlet> &lt;servlet-mapping> &lt;servlet-name>hello&lt;/servlet-name> &lt;url-pattern>/hello&lt;/url-pattern> &lt;/servlet-mapping> &lt;/web-app> 因此一个标准的目录是这样的： . ├── src（java 源码） ├── WEB-INF（提供 Tomcat 执行的信息） │ ├── classes（编译后的字节码文件） ├── ├── lib（依赖的库） ├── ├── web.xml（应用配置项） ├── index.jsp（页面） 工作的流程： 编写 Servlet 程序 编译成字节码放入 classes 导入依赖库 配置 web.xml 中的映射关系 发布到 webapps 目录下 启动 Tomcat 访问对应 Web 应用 # 部署方式 直接将 war 放入webapps文件夹中 指定虚拟目录 使用jar -cvf &lt;outnname.war&gt; [file1, file2, ...]命令，比如jar -cvf test.war *会将当前目录所有的文件打包成test.war文件，丢到webapps启动时，会在当前目录下解压出来部署","head":[["meta",{"property":"og:url","content":"https://jqiue.github.io/sundry/server.html"}],["meta",{"property":"og:site_name","content":"JQiue's notes"}],["meta",{"property":"og:title","content":"服务端软件"}],["meta",{"property":"og:description","content":"# Tomcat 前置知识 HTML CSS JavaScript Java HTTP Tomcat 是 Apache 公司开发的一款免费的 Web 应用服务器，虽然它为 HTML 页面提供服务，但实际上运行的是 JSP 和 Servlet。因为处理静态 HTML 的能力不如其他服务器，所以它只能算是一个运行 JSP 和 Servlet 的容器，能够单独处理 HTML 页面 从官网下载它，Tomcat 依赖于 Java 运行，在这里查看匹配当前 Java 版本的 Tomcat。如果没有配置JAVA_HOME系统环境变量，一定要配置，它为 Tomcat 指明 Java 所在的目录，否则启动时只能看到一闪而过的窗口 在bin目录下，找到startup.bat（如果是 Windows）双击它，会弹出一个终端窗口启动 Tomcat（如果没有问题）。这时不要关闭它，打开浏览器输入localhost:8080访问，出现下图就代表 Tomcat 以及相关配置没有问题 不要直接关闭打开中的终端来停止 Tomcat，应该双击bin目录下的shutdown.bat来处理 掌握 Tomcat 的一些目录是非常有必要的 bin：存放一些可执行命令，比如启动服务器和关闭服务器 conf：存放服务器启动时相关的配置，核心配置文件server.xml lib：运行时依赖的库 logs：存放执行日志信息的目录 temps：临时文件夹目录 webapps：发布应用的目录 work：处理 JSP 的工作目录 最重要的是webapps，通过网址访问的路径都是这个目录下的应用，如果打开这个目录，会发现 Tomcat 自带几个 Web 应用，通过localhost:8080会默认指向ROOT目录中的应用 一个 Web 应用的目录结构是这样的： WebName │ index.jsp │ ... └─WEB-INF │ web.xml # 当前整个 Web 应用的核心配置文件 │ ├─classes # 编译后的 java 字节码文件 └─lib # jar 包 警告 host-manager、manager、ROOT这三个项目最好不要删，其它的都可以删掉以增加启动速度 # 核心配置 server.xml是 Tomcat 的核心配置文件 &lt;Server> &lt;Service name=\\"catalina\\"> &lt;Connector connectionTimeout=\\"20000\\" port=\\"8080\\" protocol=\\"HTTP/1.1\\" redirectPort=\\"8443\\"/> &lt;Connector port=\\"8009\\" protocol=\\"AJP/1.3\\" redirectPort=\\"8443\\"/> &lt;Engine defaultHost=\\"Localhost\\" name=\\"catalina\\"> &lt;Host appBase=\\"webapps\\" autoDeploy=\\"true\\" name=\\"LocaLhost\\" unpackwARs=\\"true\\"> &lt;Context docBase=\\"project1\\" path=\\" /project1\\" reloadable=\\"true\\" /> &lt;Context docBase=\\"project2\\" path=\\"/project2\\" reloadable=\\"true\\" /> &lt;/Host> &lt;Host appBase=\\"webapps\\" autoDeploy=\\"true\\" name=\\"m. myxq.com\\" unpackWARs=\\"true\\"> &lt;Context docBase=\\"project1\\" path=\\"/project1\\" reloadable=\\"true\\" > &lt;Context docBase=\\"project2\\" path=\\"/project2\\" reloadable=\\"true\\" > &lt;/Host> &lt;/Engine> &lt;/Service> &lt;/Server> Server - 整个Server容器组合，可以包含一个或者多个 Service Service - 由一个或者多个 Connector 组成，以及一个 Engine，负责处理所有的 Connector 所获得的客户请求 Connector - 客户端与程序交互组件，负责接受请求以及向客户端返回响应 Engine - 处理连接器接受到请求 Host - 虚拟主机 Context - 一个 Context 对应一个 Web Application # 虚拟目录 &lt;Context docBase=\\"\\" path=\\"\\" reloadable=\\"\\" source=\\"\\"/> docBase：Web 应用的文件目录 path：URL 入口 reloadable：字节码改变时是否重新加载 # Servlet Servlet 提供处理处理请求和响应的 API，由servlet-api.jar提供对应的接口，每一个实现该接口的 Java 类都是一个 Servlet 处理程序。在运行对应的 Servlet 时，不需要main方法，会被编译成字节码文件放入WEB-INF -&gt; classes目录下根据请求去执行对应的 Servlet 程序 Tomcat 启动时会将网页中的 URL 映射成 webapps 中的应用目录，一个 URL 对应一个 Servlet，当请求这个 URL 时，会执行&lt;servlet&gt;标签中对应的 java 程序，这个程序是编译过的字节码文件，存放在classes目录，但是无法访问 WEB-INF 目录下的文件 如果想要将 URL 映射成对应的 Servlet 程序，则应该在web.xml中进行配置，比如： &lt;web-app> &lt;servlet> &lt;servlet-name>hello&lt;/servlet-name> &lt;servlet-class>HelloServlet&lt;/servlet-class> &lt;/servlet> &lt;servlet-mapping> &lt;servlet-name>hello&lt;/servlet-name> &lt;url-pattern>/hello&lt;/url-pattern> &lt;/servlet-mapping> &lt;/web-app> 因此一个标准的目录是这样的： . ├── src（java 源码） ├── WEB-INF（提供 Tomcat 执行的信息） │ ├── classes（编译后的字节码文件） ├── ├── lib（依赖的库） ├── ├── web.xml（应用配置项） ├── index.jsp（页面） 工作的流程： 编写 Servlet 程序 编译成字节码放入 classes 导入依赖库 配置 web.xml 中的映射关系 发布到 webapps 目录下 启动 Tomcat 访问对应 Web 应用 # 部署方式 直接将 war 放入webapps文件夹中 指定虚拟目录 使用jar -cvf &lt;outnname.war&gt; [file1, file2, ...]命令，比如jar -cvf test.war *会将当前目录所有的文件打包成test.war文件，丢到webapps启动时，会在当前目录下解压出来部署"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://jqiue.github.io/"}],["meta",{"property":"og:updated_time","content":"2022-10-09T12:37:49.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"服务端软件"}],["meta",{"property":"article:modified_time","content":"2022-10-09T12:37:49.000Z"}]]},"excerpt":"<h2 id=\\"tomcat\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#tomcat\\" aria-hidden=\\"true\\">#</a> Tomcat</h2>\\n<div class=\\"custom-container info\\">\\n<p class=\\"custom-container-title\\">前置知识</p>\\n<ul>\\n<li>HTML</li>\\n<li>CSS</li>\\n<li>JavaScript</li>\\n<li>Java</li>\\n<li>HTTP</li>\\n</ul>\\n</div>\\n<p>Tomcat 是 Apache 公司开发的一款免费的 Web 应用服务器，虽然它为 HTML 页面提供服务，但实际上运行的是 JSP 和 Servlet。因为处理静态 HTML 的能力不如其他服务器，所以它只能算是一个运行 JSP 和 Servlet 的容器，能够单独处理 HTML 页面</p>\\n<p>从<a href=\\"https://tomcat.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网<ExternalLinkIcon/></a>下载它，Tomcat 依赖于 Java 运行，在<a href=\\"https://tomcat.apache.org/whichversion.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这里<ExternalLinkIcon/></a>查看匹配当前 Java 版本的 Tomcat。如果没有配置<code v-pre>JAVA_HOME</code>系统环境变量，一定要配置，它为 Tomcat 指明 Java 所在的目录，否则启动时只能看到一闪而过的窗口</p>\\n<p>在<code v-pre>bin</code>目录下，找到<code v-pre>startup.bat</code>（如果是 Windows）双击它，会弹出一个终端窗口启动 Tomcat（如果没有问题）。这时不要关闭它，打开浏览器输入<code v-pre>localhost:8080</code>访问，出现下图就代表 Tomcat 以及相关配置没有问题</p>\\n<p><img src=\\"@source/sundry/images/tomcat-1.jpeg\\" alt=\\"tomcat-1\\"></p>\\n<p>不要直接关闭打开中的终端来停止 Tomcat，应该双击<code v-pre>bin</code>目录下的<code v-pre>shutdown.bat</code>来处理</p>\\n<p>掌握 Tomcat 的一些目录是非常有必要的</p>\\n<ul>\\n<li>bin：存放一些可执行命令，比如启动服务器和关闭服务器</li>\\n<li>conf：存放服务器启动时相关的配置，核心配置文件<code v-pre>server.xml</code></li>\\n<li>lib：运行时依赖的库</li>\\n<li>logs：存放执行日志信息的目录</li>\\n<li>temps：临时文件夹目录</li>\\n<li>webapps：发布应用的目录</li>\\n<li>work：处理 JSP 的工作目录</li>\\n</ul>\\n<p>最重要的是<code v-pre>webapps</code>，通过网址访问的路径都是这个目录下的应用，如果打开这个目录，会发现 Tomcat 自带几个 Web 应用，通过<code v-pre>localhost:8080</code>会默认指向<code v-pre>ROOT</code>目录中的应用</p>\\n<p>一个 Web 应用的目录结构是这样的：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre v-pre class=\\"language-text\\"><code>WebName\\n│  index.jsp\\n│  ...\\n└─WEB-INF\\n    │  web.xml # 当前整个 Web 应用的核心配置文件\\n    │\\n    ├─classes # 编译后的 java 字节码文件\\n    └─lib # jar 包\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><div class=\\"custom-container danger\\">\\n<p class=\\"custom-container-title\\">警告</p>\\n<p><code v-pre>host-manager</code>、<code v-pre>manager</code>、<code v-pre>ROOT</code>这三个项目最好不要删，其它的都可以删掉以增加启动速度</p>\\n</div>\\n<h3 id=\\"核心配置\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#核心配置\\" aria-hidden=\\"true\\">#</a> 核心配置</h3>\\n<p><code v-pre>server.xml</code>是 Tomcat 的核心配置文件</p>\\n<div class=\\"language-xml line-numbers-mode\\" data-ext=\\"xml\\"><pre v-pre class=\\"language-xml\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Server</span><span class=\\"token punctuation\\">></span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Service</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>catalina<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Connector</span> <span class=\\"token attr-name\\">connectionTimeout</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>20000<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">port</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>8080<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">protocol</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>HTTP/1.1<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">redirectPort</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>8443<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">/></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Connector</span> <span class=\\"token attr-name\\">port</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>8009<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">protocol</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>AJP/1.3<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">redirectPort</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>8443<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">/></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Engine</span> <span class=\\"token attr-name\\">defaultHost</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>Localhost<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>catalina<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Host</span> <span class=\\"token attr-name\\">appBase</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>webapps<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">autoDeploy</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>LocaLhost<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">unpackwARs</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Context</span> <span class=\\"token attr-name\\">docBase</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>project1<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">path</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span> /project1<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">reloadable</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/></span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Context</span> <span class=\\"token attr-name\\">docBase</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>project2<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">path</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>/project2<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">reloadable</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/></span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Host</span><span class=\\"token punctuation\\">></span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Host</span> <span class=\\"token attr-name\\">appBase</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>webapps<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">autoDeploy</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>m. myxq.com<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">unpackWARs</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">></span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Context</span> <span class=\\"token attr-name\\">docBase</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>project1<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">path</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>/project1<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">reloadable</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">></span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Context</span> <span class=\\"token attr-name\\">docBase</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>project2<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">path</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>/project2<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">reloadable</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>true<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">></span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Host</span><span class=\\"token punctuation\\">></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Engine</span><span class=\\"token punctuation\\">></span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Service</span><span class=\\"token punctuation\\">></span></span> \\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>Server</span><span class=\\"token punctuation\\">></span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>Server - 整个Server容器组合，可以包含一个或者多个 Service</li>\\n<li>Service - 由一个或者多个 Connector 组成，以及一个 Engine，负责处理所有的 Connector 所获得的客户请求</li>\\n<li>Connector - 客户端与程序交互组件，负责接受请求以及向客户端返回响应</li>\\n<li>Engine - 处理连接器接受到请求</li>\\n<li>Host - 虚拟主机</li>\\n<li>Context - 一个 Context 对应一个 Web Application</li>\\n</ul>\\n<h4 id=\\"虚拟目录\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#虚拟目录\\" aria-hidden=\\"true\\">#</a> 虚拟目录</h4>\\n<div class=\\"language-xml line-numbers-mode\\" data-ext=\\"xml\\"><pre v-pre class=\\"language-xml\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>Context</span> <span class=\\"token attr-name\\">docBase</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">path</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">reloadable</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">source</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">/></span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><ul>\\n<li>docBase：Web 应用的文件目录</li>\\n<li>path：URL 入口</li>\\n<li>reloadable：字节码改变时是否重新加载</li>\\n</ul>\\n<h3 id=\\"servlet\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#servlet\\" aria-hidden=\\"true\\">#</a> Servlet</h3>\\n<p>Servlet 提供处理处理请求和响应的 API，由<code v-pre>servlet-api.jar</code>提供对应的接口，每一个实现该接口的 Java 类都是一个 Servlet 处理程序。在运行对应的 Servlet 时，不需要<code v-pre>main</code>方法，会被编译成字节码文件放入<code v-pre>WEB-INF -&gt; classes</code>目录下根据请求去执行对应的 Servlet 程序</p>\\n<p>Tomcat 启动时会将网页中的 URL 映射成 webapps 中的应用目录，一个 URL 对应一个 Servlet，当请求这个 URL 时，会执行<code v-pre>&lt;servlet&gt;</code>标签中对应的 java 程序，这个程序是编译过的字节码文件，存放在<code v-pre>classes</code>目录，但是无法访问 WEB-INF 目录下的文件</p>\\n<p>如果想要将 URL 映射成对应的 Servlet 程序，则应该在<code v-pre>web.xml</code>中进行配置，比如：</p>\\n<div class=\\"language-xml line-numbers-mode\\" data-ext=\\"xml\\"><pre v-pre class=\\"language-xml\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>web-app</span><span class=\\"token punctuation\\">></span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>servlet</span><span class=\\"token punctuation\\">></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>servlet-name</span><span class=\\"token punctuation\\">></span></span>hello<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>servlet-name</span><span class=\\"token punctuation\\">></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>servlet-class</span><span class=\\"token punctuation\\">></span></span>HelloServlet<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>servlet-class</span><span class=\\"token punctuation\\">></span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>servlet</span><span class=\\"token punctuation\\">></span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>servlet-mapping</span><span class=\\"token punctuation\\">></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>servlet-name</span><span class=\\"token punctuation\\">></span></span>hello<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>servlet-name</span><span class=\\"token punctuation\\">></span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>url-pattern</span><span class=\\"token punctuation\\">></span></span>/hello<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>url-pattern</span><span class=\\"token punctuation\\">></span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>servlet-mapping</span><span class=\\"token punctuation\\">></span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>web-app</span><span class=\\"token punctuation\\">></span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>因此一个标准的目录是这样的：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre v-pre class=\\"language-text\\"><code>.\\n├── src（java 源码）\\n├── WEB-INF（提供 Tomcat 执行的信息）\\n│   ├── classes（编译后的字节码文件）\\n├── ├── lib（依赖的库）\\n├── ├── web.xml（应用配置项）\\n├── index.jsp（页面）\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>工作的流程：</p>\\n<ol>\\n<li>编写 Servlet 程序</li>\\n<li>编译成字节码放入 classes</li>\\n<li>导入依赖库</li>\\n<li>配置 web.xml 中的映射关系</li>\\n<li>发布到 webapps 目录下</li>\\n<li>启动 Tomcat</li>\\n<li>访问对应 Web 应用</li>\\n</ol>\\n<h3 id=\\"部署方式\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#部署方式\\" aria-hidden=\\"true\\">#</a> 部署方式</h3>\\n<ul>\\n<li>直接将 war 放入<code v-pre>webapps</code>文件夹中</li>\\n<li>指定虚拟目录</li>\\n</ul>\\n<p>使用<code v-pre>jar -cvf &lt;outnname.war&gt; [file1, file2, ...]</code>命令，比如<code v-pre>jar -cvf test.war *</code>会将当前目录所有的文件打包成<code v-pre>test.war</code>文件，丢到<code v-pre>webapps</code>启动时，会在当前目录下解压出来部署</p>\\n","headers":[{"level":2,"title":"Tomcat","slug":"tomcat","link":"#tomcat","children":[{"level":3,"title":"核心配置","slug":"核心配置","link":"#核心配置","children":[]},{"level":3,"title":"Servlet","slug":"servlet","link":"#servlet","children":[]},{"level":3,"title":"部署方式","slug":"部署方式","link":"#部署方式","children":[]}]},{"level":2,"title":"Nginx","slug":"nginx","link":"#nginx","children":[{"level":3,"title":"虚拟主机","slug":"虚拟主机","link":"#虚拟主机","children":[]},{"level":3,"title":"托管静态资源","slug":"托管静态资源","link":"#托管静态资源","children":[]},{"level":3,"title":"内置变量","slug":"内置变量","link":"#内置变量","children":[]},{"level":3,"title":"反向代理","slug":"反向代理","link":"#反向代理","children":[]},{"level":3,"title":"设置响应头","slug":"设置响应头","link":"#设置响应头","children":[]},{"level":3,"title":"请求体大小","slug":"请求体大小","link":"#请求体大小","children":[]},{"level":3,"title":"带宽速率限制","slug":"带宽速率限制","link":"#带宽速率限制","children":[]},{"level":3,"title":"配置 gzip 压缩传输","slug":"配置-gzip-压缩传输","link":"#配置-gzip-压缩传输","children":[]},{"level":3,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[]},{"level":3,"title":"location","slug":"location","link":"#location","children":[]},{"level":3,"title":"配置 HTTPS","slug":"配置-https","link":"#配置-https","children":[]},{"level":3,"title":"地址重写","slug":"地址重写","link":"#地址重写","children":[]},{"level":3,"title":"动静分离","slug":"动静分离","link":"#动静分离","children":[]}]}],"git":{"createdTime":1649835138000,"updatedTime":1665319069000,"contributors":[{"name":"JQiue","email":"861947542@qq.com","commits":3}]},"readingTime":{"minutes":12.05,"words":3614},"autoDesc":true,"localizedDate":"2022年4月13日","filePathRelative":"sundry/server.md"}`);export{a as data};
