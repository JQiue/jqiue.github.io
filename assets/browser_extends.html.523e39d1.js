import{ac as o,A as p,B as c,z as n,M as s,H as t,ae as a,O as i}from"./framework.a879f165.js";const l={},u=a(`<div class="custom-container tip"><p class="custom-container-title">提示</p><p>基于 Chrome 内核浏览器扩展</p></div><p>扩展是定制浏览体验的小软件程序，它们可以让用户以多种方式调整浏览器的功能和行为，扩展是建立在诸如 HTML、JavaScript 和 CSS 等 Web 技术之上的。它们运行在一个独立的沙箱执行环境中，并与浏览器交互。提供如下功能:</p><ul><li>生产力工具</li><li>网页内容丰富</li><li>信息聚合</li><li>娱乐和游戏</li></ul><h2 id="manifest-json" tabindex="-1"><a class="header-anchor" href="#manifest-json" aria-hidden="true">#</a> manifest.json</h2><p>扩展必须拥有这个文件才可以被安装，必须包含以下字段：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;manifest_version&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;icons&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然大多数扩展的<code>manifest_version</code>版本是 2，但为了支持现代浏览器，Google 推荐升级到 3。<code>name</code>定义了扩展的名称, <code>description</code>定义了扩展的描述，<code>version</code>定义了扩展的版本，<code>icons</code>定义了扩展相关图标文件的位置</p>`,7),r={href:"https://developer.chrome.com/docs/extensions/mv3/manifest/",target:"_blank",rel:"noopener noreferrer"},d=a(`<h2 id="弹出页" tabindex="-1"><a class="header-anchor" href="#弹出页" aria-hidden="true">#</a> 弹出页</h2><p>如果没有声明在 Manifest 中<code>action</code>字段，左击只会显示默认的浏览器上下文菜单，这个字段的作用就是为鼠标左击扩展时弹出的页面</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;action&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;default_popup&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./popup/popup.html&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;default_icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./images/popup.png&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;default_title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my extends&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>default_popup</code>定义了当用户单击扩展图标时所显示页面的文件位置，<code>default_icon</code>属性定义了相应图标文件的位置，<code>default_title</code>定义了当用户鼠标悬停于扩展图标上所显示的文字</p><p>这个地方的页面是可以省略掉很多东西的，比如<code>title</code>，这对于扩展没有任何意义，弹出也会在用户点击扩展图标时打开，关闭后就会销毁</p><div class="custom-container danger"><p class="custom-container-title">警告</p><ol><li>不要在其中保留数据</li><li>不要让弹出页太大</li></ol></div><h2 id="内容脚本" tabindex="-1"><a class="header-anchor" href="#内容脚本" aria-hidden="true">#</a> 内容脚本</h2><p>扩展可以对用户的当前浏览的页面进行操作，实际上是对 DOM 的操作，通过 Manifest 的<code>content_scripts</code>字段可以指定将哪些脚本何时注入到哪里页面中，当用户访问这些页面时，相应脚本便会自动执行</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;content_scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;matches&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;https://www.bilibili.com/*&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;js&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;./scripts/content.js&quot;</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;css&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;mask.css&quot;</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>content_scripts</code>的值是一个数组，其中每个元素可以包含<code>matches</code>，<code>js</code>，<code>css</code>等属性。其中<code>matches</code>定义了哪些页面会被注入脚本，<code>js</code>定义要注入的脚本，<code>css</code>定义了要注入的样式。当然还有其他属性：</p><ul><li><code>exclude_globs</code>：定义了哪些页面不会被注入脚本</li><li><code>include_globs</code>：是全局 URL 匹配</li><li><code>run_at</code>：定义了何时进行注入</li><li><code>all_frames</code>：定义脚本是否会注入到嵌入式框架中</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果 URL 匹配 mathces 值的同时也匹配 include_globs 的值，会被注入。如果 URL 匹配 exclude_matches 的值或者匹配 exclude_globs 的值，则不会被注入</p></div><p>被注入的脚本只共享页面的 DOM，不会共享页面自带的命名空间，这意味着两个脚本是互相独立的，变量不会互相干扰，当然也无法互相访问</p><h2 id="常驻后台服务" tabindex="-1"><a class="header-anchor" href="#常驻后台服务" aria-hidden="true">#</a> 常驻后台服务</h2><p>扩展一般在用户访问页面的时候运行，Chrome 允许扩展自动运行并常驻后台来实现一些特定的功能，这利于弹出页或者选项页进行状态的更新，在 Manifest 中使用<code>background</code>声明后台脚本</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;background&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;service_worker&quot;</span><span class="token operator">:</span> <span class="token string">&quot;background.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
\`\`\`z

\`service_worker\`用于定义后台脚本的位置，后台脚本是没有 UI 的

在后台服务中可以使用\`onInstalled\`事件来监听扩展安装完成

\`\`\`js
chrome.runtime.onInstalled.addListener(() =&gt; <span class="token punctuation">{</span><span class="token punctuation">}</span>);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在后台服务中，必须同步注册监听事件，不能异步注册</p><h2 id="选项页" tabindex="-1"><a class="header-anchor" href="#选项页" aria-hidden="true">#</a> 选项页</h2><p>有一些扩展允许用户进行个性化设置，这样就需要向用户提供一个选项页面，通过<code>options_page</code>定义选项页的位置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;options_page&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./option/option.html&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一旦声明了选项页，用户右击扩展图标时会显示“扩展选项”字眼，点击它就可以跳转到选项页</p><h2 id="扩展-api" tabindex="-1"><a class="header-anchor" href="#扩展-api" aria-hidden="true">#</a> 扩展 API</h2><p>浏览器为扩展程序提供了特有的 API，大多数 API 都不支持在注入脚本中访问的</p>`,23),k={href:"https://developer.chrome.com/docs/extensions/reference/",target:"_blank",rel:"noopener noreferrer"},v=a(`<h2 id="扩展页面之间的通信" tabindex="-1"><a class="header-anchor" href="#扩展页面之间的通信" aria-hidden="true">#</a> 扩展页面之间的通信</h2><p>有时需要让扩展中的多个页面之间，或者不同扩展的多个页面之间相互传输数据，以获得彼此的状态。比如在弹出页中修改状态，弹出页将这个状态传给后台服务脚本</p><p>Chrome 提供了 4 个有关扩展页面间相互通信的接口，分别是 runtime.sendMessage、runtime.onMessage、runtime.connect 和 runtime.onConnect</p><p>其中 runtime.sendMessage、runtime.onMessage 支持在注入脚本中访问</p><p>如果想要弹出页和后台服务进行通信，可以使用以下方式发送消息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>chrome<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的，后台服务要监听这个消息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>chrome<span class="token punctuation">.</span>runtime<span class="token punctuation">.</span>onMessage<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message<span class="token punctuation">,</span> sender<span class="token punctuation">,</span> sendResponse</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>message <span class="token operator">==</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token string">&quot;Hello from background.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展权限" tabindex="-1"><a class="header-anchor" href="#扩展权限" aria-hidden="true">#</a> 扩展权限</h2><p>通常情况下，为了安全性，扩展的权限是受限的，扩展支持三种类型的权限声明：</p><ul><li><code>permissions</code>：直接授予权限</li><li><code>optional_permissions</code>：跟<code>permissions</code>是类似，但用户在运行时授权</li><li><code>host_permissions</code>：包含一个或多个提供对一个或多个主机的访问权的匹配模式</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;permissions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;tabs&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;bookmarks&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;unlimitedStorage&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),m={href:"https://developer.chrome.com/docs/extensions/mv3/declare_permissions/",target:"_blank",rel:"noopener noreferrer"},b=a(`<h2 id="网络请求" tabindex="-1"><a class="header-anchor" href="#网络请求" aria-hidden="true">#</a> 网络请求</h2><p>扩展不受跨域限制，但是必须在 Manifest 中声明需要跨域的权限</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;permissions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;*://*.jinqiu.wang/*&quot;</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时扩展可以使用网络请求技术了</p><h2 id="存储" tabindex="-1"><a class="header-anchor" href="#存储" aria-hidden="true">#</a> 存储</h2><p>扩展虽然可以使用方式来存储数据：</p><ul><li>localStorage</li><li>扩展 API</li><li>Web SQL</li></ul><p>对于一般的设置可以使用第一种，对于稍微复杂的使用第二种，Chrome 为扩展提供了对应的 API 用于将数据保存在硬盘，它可以看作 localStorage 的改进版，内容脚本可以直接访问这个 API 读取数据，不必通过后台服务</p><p>使用存储 API 必须先声明<code>storage</code>权限，存储 API 提供了两种储存区域，分别是 sync 和 local，前者会根据用户的 Google 账户自动同步数据，当无网络时，sync 和 local 对数据的读写一致</p><p>每种区域又提供了五种方法用于操作数据：</p><ul><li>get(key, callback(result))：如果 key 是字符串则和 localStorage 一致，如果是数组相当于一次性获取多个数据</li><li>set(items, callback())：items 为对象类型，如果属性值是字符串，数字，数组则存储的格式不会变，如果是对象或 函数，则会被存储为<code>{}</code>，如果是日期和正则，会被存储为他们都在字符串形式</li><li>remove(keys, callback())：删除某个或多个数据</li><li>clear(callback())：清除所有的数据</li><li>getBytesInUse(key, callback(bytes))：获取一个数据或多个数据占用的总空间，单位是字节</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>chrome<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>sync<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chrome<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>sync<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chrome<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>sync<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chrome<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>sync<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
chrome<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>sync<span class="token punctuation">.</span><span class="token function">getBytesInUse</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时还提供了<code>onChanged</code>事件，当数据发送改变时就会触发</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>chrome<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>onChanged<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">changes<span class="token punctuation">,</span> namespace</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Value in &#39;</span><span class="token operator">+</span> namespace <span class="token operator">+</span><span class="token string">&#39; has been changed:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>changes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
···
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function h(g,q){const e=i("ExternalLinkIcon");return p(),c("div",null,[u,n("blockquote",null,[n("p",null,[s("更多字段前往"),n("a",r,[s("https://developer.chrome.com/docs/extensions/mv3/manifest/"),t(e)])])]),d,n("blockquote",null,[n("p",null,[s("从 "),n("a",k,[s("https://developer.chrome.com/docs/extensions/reference/"),t(e)]),s(" 查看更多")])]),v,n("blockquote",null,[n("p",null,[s("从 "),n("a",m,[s("https://developer.chrome.com/docs/extensions/mv3/declare_permissions/"),t(e)]),s(" 看更多权限")])]),b])}const _=o(l,[["render",h],["__file","browser_extends.html.vue"]]);export{_ as default};
