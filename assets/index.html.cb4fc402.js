import{ac as l,A as i,B as e,ae as a}from"./framework.a879f165.js";const r={},d=a('<p>这里解释的是一些数据库中的概念，避免对一些事物造成混淆</p><h2 id="数据库管理系统" tabindex="-1"><a class="header-anchor" href="#数据库管理系统" aria-hidden="true">#</a> 数据库管理系统</h2><p>数据库虽然被很多人看作一款软件，但是数据库管理系统（DBMS）才是正确的叫法，数据库是通过 DBMS 创建的容器，比如 MySQL，SQL server，MongoDB 等，DBMS 可以对多个数据库进行管理，所以<code>DBMS = 多个数据库（DB） + 管理程序</code></p><h2 id="关系型-rdbms-和非关系型-nosql" tabindex="-1"><a class="header-anchor" href="#关系型-rdbms-和非关系型-nosql" aria-hidden="true">#</a> 关系型（RDBMS）和非关系型（NoSQL）</h2><p>关系型数据库（RDBMS）绝对是 DBMS 的主流，它是建立在关系模型基础上的数据库，SQL 就是关系型数据库的查询语言。相比 SQL ，NoSQL 泛指非关系型数据库，包括了键值对型数据库、文档型数据库、搜索引擎和列存储等等</p><ul><li>键值对型：通过<code>key-value</code>形式方式来存储数据，由于 key 是唯一的标识符，所以查询效率非常快，这方面很明显优势于关系型数据库，同时缺点也很明显，无法像关系型数据库一样使用条件过滤，通常要遍历所有的键消耗大量的运算，通常使用场景是作为缓存使用，比如 Redis</li><li>文档型：文档被当作处理信息的基本单位，一个文档相当于一条记录，MongoDB 是最流行的文档型数据库</li><li>搜索引擎型：虽然关系型数据库采用了索引提升了索引效率，但是针对于全文索引的效率非常低，搜索引擎优势在于全文搜索的技术</li><li>列存储型：列式数据库是相对于行式存储的数据库，Oracle、Mysql、SQL Sever 等都是行式存储，而列式数据库是将数据按照列存储到数据库中，好处是可以大量的降低系统的 I/O，适合分布式文件系统</li></ul><p>RDBMS</p><ul><li>高度组织化结构化数据</li><li>结构化查询语言（SQL）</li><li>数据和关系都存储在单独的表中。</li><li>数据操纵语言，数据定义语言</li><li>严格的一致性</li><li>基础事务</li></ul><p>NoSQL</p><ul><li>代表着不仅仅是 SQL</li><li>没有声明性查询语言</li><li>没有预定义的模式</li><li>键 - 值对存储，列存储，文档存储，图形数据库</li><li>最终一致性，而非 ACID 属性</li><li>非结构化和不可预知的数据</li><li>CAP 定理</li><li>高性能，高可用性和可伸缩性</li></ul><h2 id="rdbms" tabindex="-1"><a class="header-anchor" href="#rdbms" aria-hidden="true">#</a> RDBMS</h2><ul><li>数据库：数据库（Database）是最容易被搞混淆的概念，这个术语用法很多，有时候被认为是一个软件或是数据的仓库，但通常被认为是一个软件，这并不是正确的定义，数据库应该被视为存储数据的容器，通常不管数据是什么，以及数据是如何组织的</li><li>表：表（Table）是一种结构化的文件，用来存储某种特定类型的数据，由固定的列和任意的行组成</li><li>列：列（column）存储了表中的某部分信息，就像 Excel 那样，每一个网格都存储着某种特定的信息，大多数情况下，列被称作为表的字段（field）</li><li>行：大部分数据库的表都是按行（row）存储的，每一行就是一个记录，这两个术语是可以交替使用的，一般行才是正确的术语</li><li>数据类型：每一个列都有相应的数据类型（datatype），定义了列能够存储哪些数据种类，数据类型能够帮助正确的分类数据，并在优化的时候起作用，因此创建表的时候应该关注所用的数据类型</li><li>主键：主键（primary key）指的是一个具有唯一标识的列，可以将任一一列作为主键，但是其值必须是唯一的，主键能够方便对表中的数据进行操作，从原则上来讲，每一个表都应该有一个主键列，虽然不是必须的</li><li>外键：外键（foreign key）用表中的一个列关联多个表</li><li>索引：索引（index）可以快速访问表中的特定信息，索引是对数据进行排序的一种结构</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2><ul><li>MongoDB 权威指南（第2版）</li><li>MySQL 必知必会</li><li>SQL 必知必会（第4版）</li><li>SQL 基础教程</li><li>SQL 经典实例</li><li>漫画数据库</li><li>数据库系统实现（第2版）</li></ul>',14),o=[d];function n(c,s){return i(),e("div",null,o)}const h=l(r,[["render",n],["__file","index.html.vue"]]);export{h as default};
