const t=JSON.parse(`{"key":"v-29828628","path":"/c/malloc.html","title":"内存分配","lang":"zh-CN","frontmatter":{"title":"内存分配","category":["编程语言"],"tag":["C"],"article":false,"description":"内存是计算机中非常稀有的资源，了解一个内存的架构，如何理解操作系统管理内存，作为一个程序员更好的使用内存是非常有必要的 在一个典型的架构中，分配给应用程序的内存被分为 4 个区段：\\r堆区 - 动态内存，可以分配任意大小的内存，只要不超过计算机内存的可用容量，堆并不是数据结构中的堆实现; \\r栈区 - 用于存放函数调用时的所有信息，包括所有的局部变量，生命...","head":[["meta",{"property":"og:url","content":"https://jqiue.github.io/c/malloc.html"}],["meta",{"property":"og:site_name","content":"JQiue's notes"}],["meta",{"property":"og:title","content":"内存分配"}],["meta",{"property":"og:description","content":"内存是计算机中非常稀有的资源，了解一个内存的架构，如何理解操作系统管理内存，作为一个程序员更好的使用内存是非常有必要的 在一个典型的架构中，分配给应用程序的内存被分为 4 个区段：\\r堆区 - 动态内存，可以分配任意大小的内存，只要不超过计算机内存的可用容量，堆并不是数据结构中的堆实现; \\r栈区 - 用于存放函数调用时的所有信息，包括所有的局部变量，生命..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-07T10:29:43.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:modified_time","content":"2022-07-07T10:29:43.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1646459606000,"updatedTime":1657189783000,"contributors":[{"name":"JQiue","email":"861947542@qq.com","commits":2}]},"readingTime":{"minutes":2.11,"words":634},"autoDesc":true,"localizedDate":"2022年3月5日","filePathRelative":"c/malloc.md"}`);export{t as data};
