import{ac as p,A as c,B as l,H as t,ad as o,E as u,ae as e,z as n,M as s,O as i}from"./framework.a879f165.js";const k={},r=e(`<p>浏览器与服务器之间的通信基础是 HTTP 协议，用户通过网址或表单向服务器提交请求，服务器接收请求并响应给浏览器</p><p>在没有异步编程的情况下，浏览器发送请求时必须刷新网页才能重新渲染数据，这是用户无法容忍的阶段，于是产生了后端服务器渲染 HTML 页面的方式解决，这种方式叫做混编模式，比如 PHP 和 JSP。在 HTML 文档中编写对应的脚本程序，后端程序处理成能够被浏览器解析的 HTML 代码响应给浏览器，这样就实现了动态网页。这种方式导致了 HTML 代码难以维护，所以程序员必须熟悉所有的程序代码编写</p><p>Ajax 是一个伟大的创造，它不是一个具体的技术，它是多项技术的结合，包括 HTML、CSS、JavaScript、DOM、XML、以及最重要的<code>XMLHttpRequest</code>构造函数。当使用了这些技术，就可以实现不用重载页面而刷新数据的功能。Ajax 中的“x”代表 XML，它是一种具有结构性的标记语言，通常用于 Web 之间的数据传输</p><p>简而言之，就是通过 JavaScript 向服务器发送 HTTP 请求，并处理服务器返回的数据，通过 DOM 渲染到 HTML 文档中对应的位置，这个过程中不会刷新整个网页，这就是 Ajax 使用流程</p><h2 id="xmlhttprequest" tabindex="-1"><a class="header-anchor" href="#xmlhttprequest" aria-hidden="true">#</a> XMLHttpRequest</h2><p>JavaScript 发起 HTTP 请求必须通过<code>XMLHttpRequest</code>创建一个请求对象，本身是一个内置的构造函数，是浏览器与服务器通信的接口。通过请求对象的<code>open(method, url, async)</code>方法来设置请求方式：</p><ul><li><code>method</code>：请求方法</li><li><code>url</code>：请求地址</li><li><code>async</code>：异步请求还是同步请求，<code>true</code>表示异步请求</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 创建请求对象 */</span>
<span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* 设置请求方式 */</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://www.httpbin.org/get&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>send</code>方法才是发送请求的具体步骤，<code>send</code>方法的参数只有在 POST 请求下才有用，而 GET 请求则不用填写</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 发送请求 */</span>
http<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>readyState</code>是请求对象发送请求时各阶段的状态，分别是：</p><ul><li><code>0</code>：请求未初始化，未调用<code>open()</code>方法</li><li><code>1</code>：与服务器连接已建立，调用<code>open()</code>方法和<code>send()</code>方法</li><li><code>2</code>：请求已经接收，接收响应数据</li><li><code>3</code>：请求处理中，处理响应数据</li><li><code>4</code>：请求完成，可以使用全部的数据</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>

xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://httptest.jinqiu.wang/get&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>onreadystatechange</code>是监听<code>readyState</code>属性变化的事件，且只能监听到<code>2，3，4</code>状态的改变</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 如果是一个成功的请求，它将被调用三次，readyState 的值依次为 2, 3, 4 */</span>
<span class="token comment">/* 如果是失败的请求，只会调用一次，readyState 直接变成 4 */</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>readyState</code>只是表示请求对象的生命周期：创建-&gt;初始化请求-&gt;发送请求-&gt;接收数据-&gt;处理数据-&gt;完成，而资源的请求状态由<code>status</code>保存，它是 HTTP 状态码</p><p>请求对象会将服务器的响应数据保存在<code>responseText</code>或<code>responseXML</code>中，这取决于响应头中的<code>Content-Type</code>，其中<code>responseXML</code>会直接看做成一个<code>document</code>对象</p><p><code>response</code>可以替代<code>responseText</code>，必须通过<code>responseType</code>设置响应体类型：</p><ul><li><code>text</code>：字符串形式</li><li><code>json</code>：JSON 对象形式</li></ul><p><code>timeout</code>可以设置请求头的超时时间，如果超时了就会触发超时时间</p><p>默认在同域的情况下，发送一个请求会携带 Cookie，但在跨域时不会，此时可以设置请求对象的<code>withCredentials=true</code>来携带，这里涉及到安全问题，还得看服务端同不同意</p><p><code>abort()</code>方法可以用于终止请求，同时会触发一个<code>abort</code>事件</p><p><code>setRequestHeader()</code>方法用于设置请求头信息</p><p>这是一个发送 GET 请求的例子，它将获取一个 UUID</p>`,24),d=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("button")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("btn"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("获取 UUID"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("button")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),m=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[s("document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getElementById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'btn'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'click'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" xhr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"XMLHttpRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  xhr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"open"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'GET'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'https://www.httpbin.org/uuid'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  xhr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  xhr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"onreadystatechange"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("xhr"),n("span",{class:"token punctuation"},"."),s("readyState "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},"&&"),s(" xhr"),n("span",{class:"token punctuation"},"."),s("status "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"alert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"JSON"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parse"),n("span",{class:"token punctuation"},"("),s("xhr"),n("span",{class:"token punctuation"},"."),s("response"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("uuid"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("p",null,"大多数情况下，没有必要引入一些库来发送请求，而是自己手动封装，减少了项目的依赖",-1),b=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("button")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("btn"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("获取 UUID"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("button")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[s("document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelector"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'#btn'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'click'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  http`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'https://www.httpbin.org/uuid'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"res"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"alert"),n("span",{class:"token punctuation"},"("),s("res"),n("span",{class:"token punctuation"},"."),s("uuid"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"const"),s(" http "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" xhr "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"XMLHttpRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("xhr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Error"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'浏览器不支持发起异步请求'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"formatData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" key "),n("span",{class:"token keyword"},"in"),s(" data"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      str `),n("span",{class:"token operator"},"+="),s(" key "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},"'='"),s(),n("span",{class:"token operator"},"+"),s(" data"),n("span",{class:"token punctuation"},"["),s("key"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},"'&'"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" str"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"replace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token regex"},[n("span",{class:"token regex-delimiter"},"/"),n("span",{class:"token regex-source language-regex"},"&$"),n("span",{class:"token regex-delimiter"},"/")]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"_doAjax"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"option"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" opt "),n("span",{class:"token operator"},"="),s(" option "),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
      method `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("option"),n("span",{class:"token punctuation"},"."),s("method "),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token string"},"'GET'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toUpperCase"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
      async `),n("span",{class:"token operator"},"="),s(" option"),n("span",{class:"token punctuation"},"."),s("async "),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
      url `),n("span",{class:"token operator"},"="),s(" option"),n("span",{class:"token punctuation"},"."),s("url"),n("span",{class:"token punctuation"},","),s(`
      data `),n("span",{class:"token operator"},"="),s(" option"),n("span",{class:"token punctuation"},"."),s("data "),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(`
      error `),n("span",{class:"token operator"},"="),s(" option"),n("span",{class:"token punctuation"},"."),s("error "),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
      success `),n("span",{class:"token operator"},"="),s(" option"),n("span",{class:"token punctuation"},"."),s("success "),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
      complete `),n("span",{class:"token operator"},"="),s(" option"),n("span",{class:"token punctuation"},"."),s("complete "),n("span",{class:"token operator"},"||"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("url"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Error"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'未传入 URL'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    xhr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"open"),n("span",{class:"token punctuation"},"("),s("method"),n("span",{class:"token punctuation"},","),s(" url"),n("span",{class:"token punctuation"},","),s(" async"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    xhr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),s("method "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'GET'"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"formatData"),n("span",{class:"token punctuation"},"("),s("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    xhr`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"onreadystatechange"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("xhr"),n("span",{class:"token punctuation"},"."),s("readyState "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},"&&"),s(" xhr"),n("span",{class:"token punctuation"},"."),s("status "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token function"},"success"),n("span",{class:"token punctuation"},"("),n("span",{class:"token constant"},"JSON"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parse"),n("span",{class:"token punctuation"},"("),s("xhr"),n("span",{class:"token punctuation"},"."),s("responseText"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("xhr"),n("span",{class:"token punctuation"},"."),s("status "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token number"},"404"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token function"},"error"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token function"},"complete"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function-variable function"},"ajax"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"option"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token function"},"_doAjax"),n("span",{class:"token punctuation"},"("),s("option"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function-variable function"},"get"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("url"),n("span",{class:"token punctuation"},","),s(" callback")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"_doAjax"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token literal-property property"},"method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'GET'"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token literal-property property"},"url"),n("span",{class:"token operator"},":"),s(" url"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token literal-property property"},"success"),n("span",{class:"token operator"},":"),s(` callback
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function-variable function"},"post"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("url"),n("span",{class:"token punctuation"},","),s(" data"),n("span",{class:"token punctuation"},","),s(" callback")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token function"},"_doAjax"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token literal-property property"},"method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'POST'"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token literal-property property"},"url"),n("span",{class:"token operator"},":"),s(" url"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token literal-property property"},"data"),n("span",{class:"token operator"},":"),s(" data"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token literal-property property"},"success"),n("span",{class:"token operator"},":"),s(` callback
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 
 * 支持 GET，POST 请求
 * 只有 3 个方法
 * 1. ajax(option)
 * 2. get(url, callback)
 * 3. post(url, data, callback)
 * 
*/</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>xhr<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;浏览器不支持发起异步请求&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 处理 Data</span>
  <span class="token keyword">function</span> <span class="token function">formatData</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      str <span class="token operator">+=</span> key <span class="token operator">+</span> <span class="token string">&#39;=&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 封装请求过程</span>
  <span class="token keyword">function</span> <span class="token function">_doAjax</span><span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 初始化请求参数</span>
    <span class="token keyword">const</span> opt <span class="token operator">=</span> option <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      method <span class="token operator">=</span> <span class="token punctuation">(</span>option<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      async <span class="token operator">=</span> option<span class="token punctuation">.</span>async <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      url <span class="token operator">=</span> option<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
      data <span class="token operator">=</span> option<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      error <span class="token operator">=</span> option<span class="token punctuation">.</span>error <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      success <span class="token operator">=</span> option<span class="token punctuation">.</span>success <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      complete <span class="token operator">=</span> option<span class="token punctuation">.</span>complete <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;未传入 URL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 设置请求</span>
    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> async<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 根据 type 发送指定类型请求</span>
    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">&#39;GET&#39;</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token function">formatData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 监听请求状态</span>
    xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">ajax</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_doAjax</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_doAjax</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> callback <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">post</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">_doAjax</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> callback <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fecth" tabindex="-1"><a class="header-anchor" href="#fecth" aria-hidden="true">#</a> Fecth</h2><p>Fetch 是一种现代请求技术，提供了一个全局的方法<code>fetch(url, [options])</code>，它会返回一个 Promise</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>options</code>可以有以下选项：</p><p><code>method</code>: 请求使用的方法，如 GET、POST <code>headers</code>: 请求的头信息，形式为 Headers 的对象或包含 ByteString 值的对象字面量 <code>body</code>: 请求的 body 信息：可能是一个 Blob、BufferSource (en-US)、FormData、URLSearchParams 或者 USVString 对象</p><p>Fetch 会解析响应头，用来检查是否请求成功，如果无法建立连接，或者因为一些其他的问题导致请求失败，Promise 就会 reject</p><p>成功发送请求后，会将信息封装到<code>response</code>对象中，包含可以读取状态的属性</p><ul><li><code>status</code> - 状态码</li><li><code>statusText</code> - 状态信息</li><li><code>ok</code> - 请求是否成功，<code>true</code>对应 HTTP 请求的状态码 200 到 299</li><li><code>headers</code> - 响应头信息，可以被迭代</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>headers</code>有很多方法，但只有以下方法最有用</p><ul><li><code>get(key)</code> - 用于获取某个字段的值</li><li><code>keys()/values()</code> - 返回键名或键值</li><li><code>forEach(callback(key, value))</code> - 遍历所有的键和值</li></ul><p><code>response</code>会根据 Content-Type，提供不同的读取方法：</p><ul><li>response.text()：得到文本字符串</li><li>response.json()：得到 JSON 对象</li><li>response.blob()：得到二进制 Blob 对象</li><li>response.formData()：得到 FormData 表单对象</li><li>response.arrayBuffer()：得到二进制 ArrayBuffer 对象</li></ul><div class="custom-container tip"><p class="custom-container-title">提示</p><p>只能使用一个读取方法，否则就会报错，都是异步的，返回的都是 Promise 对象</p></div><h2 id="轮询" tabindex="-1"><a class="header-anchor" href="#轮询" aria-hidden="true">#</a> 轮询</h2><p>HTTP 协议有一个缺陷，通信只能由客户端发起，如果想要知道服务端的状态，必须隔一段时间轮询服务器获取最新的状态。当然轮询的效率非常低，因为它不停的发生连接并中断，这对于实时信息非常不利</p><h2 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket" aria-hidden="true">#</a> WebSocket</h2><p>WebSocket 是一种网络通信协议，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，解决了轮询的问题。WebSocket 建立在 TCP 协议之上，服务器端的实现比较容易</p><p>与 HTTP 协议有着良好的兼容性。默认端口也是 80 和 443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器</p><p>数据格式比较轻量，性能开销小，通信高效</p><p>可以发送文本，也可以发送二进制数据</p><p>没有同源限制，客户端可以与任意服务器通信</p><p>协议标识符是 ws（如果加密，则为wss），服务器网址就是 URL</p><p><code>WebSocket(&#39;url&#39;)</code>对象作为一个构造函数，用于新建 WebSocket 实例，客户端就会与服务器进行连接</p><p>实例对象的<code>webSocket.readyState</code>返回当前状态：</p><ul><li>CONNECTING：值为 0，表示正在连接</li><li>OPEN：值为 1，表示连接成功，可以通信了</li><li>CLOSING：值为 2，表示连接正在关闭</li><li>CLOSED：值为 3，表示连接已经关闭，或者打开连接失败</li></ul><p>实例对象的事件有：</p><ul><li>onopen - 连接成功后的回调函数</li><li>onclose - 连接关闭后的回调函数</li><li>onmessage - 收到服务器数据后的回调函数</li><li>onerror - 报错时的回调函数</li></ul><p>实例对象的<code>send()</code>方法用于向服务器发送数据</p>`,30),f=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("button")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("connect"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("连接"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("button")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("button")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("close"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("关闭"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("button")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"let"),s(" ws "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`

document`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getElementById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'connect'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'click'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  ws `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"WebSocket"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"ws://121.40.165.18:8800"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  ws`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"onopen"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(` 
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Connection open ..."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 
    ws`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"send"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Hello WebSockets!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  ws`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"onmessage"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token string"},'"Received Message: "'),s(),n("span",{class:"token operator"},"+"),s(" e"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  ws`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"onclose"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Connection closed."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

document`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getElementById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'close'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'click'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  ws`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("p",null,"对于 WebSocket 来说，服务端也要有自己的实现",-1),x=n("h2",{id:"文件上传",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文件上传","aria-hidden":"true"},"#"),s(" 文件上传")],-1),T=n("h2",{id:"跨源策略",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#跨源策略","aria-hidden":"true"},"#"),s(" 跨源策略")],-1),S=n("p",null,"一般在浏览器发送一个 HTTP 请求时，可能就会遇到浏览器禁止请求的现象",-1),j=n("p",null,"当一个请求发出者和接收者不属于同一个域，那么这个请求就会被浏览器所拦截，所谓的同一个域即：协议、地址、端口号都要相同，否则就是跨域请求",-1),E=n("p",null,"解决方案：",-1),P=n("ul",null,[n("li",null,[s("CORS - 跨域资源共享，由后端解决，后端请求头配置了"),n("code",null,"Access-Control-Allow-Origin"),s("则允许跨域，则浏览器不会拦截")]),n("li",null,"JSONP - 利用 script 请求时不会触发跨域的限制，需要前后端配合")],-1);function L(_,H){const a=i("CodeDemo");return c(),l("div",null,[r,t(a,{id:"code-demo-111",type:"normal",title:"GET%20%E8%AF%B7%E6%B1%82",code:"eJxlUM1OwkAQfpXJHmibkJYYT0g5GIliUBORxEMvpTvQ1bKtu7NWQngFvfkqPpGJj+EskGjCZXfy/c23uxElrSrRF4O5I6o1KJlmYk46E8Of96/vj0+YzcYXg2RPDzMtuuLJskHWhVuhpniJNKrQj+frsQwDNgdRnEs5emVsoiyhRhMGRaWK56ALC6cLUrwqjGCTaYCi1pbgrTSQgsYWHm8mV0TNPb44tBRGZ17EdFw3qMPgcvTAKUHJEttPkrZtYz/PlY5rs0ycU5J5Mg7/nBa1/B+kDeZybSknLMpcL5FXH/UCUIvQy3fiqRdDmqZwCp3OPpUhZ3fYSa8XHUwAeYWGwuvp3W3c5MbiIcQ2/FCMYt9w3wVg6y8+tvwvecUs42L7C01viHM="},{default:o(()=>[d,m]),_:1}),v,t(a,{id:"code-demo-118",type:"normal",title:"%E5%B0%81%E8%A3%85%E8%AF%B7%E6%B1%82",code:"eJyVVE1rE0EY/ivjKt1dDJsiPaVNRWzxg2qlaUAwIpPdabPtZmadmTUNbQ4WBA9qEUQQPHgpiiDFQ6mH/pwm5Gf4zszubGJE6WV2532f5/18dvedjuwmTs1ZamdSMoriqN5y2pK2nOXxu7Ph0UfUbN5bWaoa93KLOhVnRwAhYmHWJVQGzzPC+w2SkFAy7rlXgez6AY6i1RfgXouFJJSAI0zicNetoK2MhjKGVJ6P9lsUoY6UabBNpOeqN1GrVnu9XqDe2zENGN+uZlkcTTE5ETkZIZwQLpUlUDB/UVkH6qGPFg0ZFVInQXXkzWQ37r0OBy8lPfT4wdpdwG4Q6EtIz8SLt5B3BTA+kh3Oehq4yrnqd3R6NP76evjp28Wvt6MPJ6M3L4dH78enZ8Pzw9GP4/HJ2ejnoWui2NxbjHexXMESexEctpWESCSkqsR1NQM4jCPP1LhL+iimaIqBNP56XTuvI7fuwqkQT8DwVFnmikgD8+BEZpwqWsBJmuCQeNW5a9UKpMxnN1Xqs4jd2sF7HkvV1eY1FYERajUudHCA9geVoqwukR0WqYkbd5AbAOXeWd0EhUjWTFPCb2NBPN/ysOjT0AYNzBVIkmfEgjKelBC4WIfqvPToG3BplpQQotZWYswVQFPCQGUjIgtDIkTJKAz/4ISsm8IuSUmylllWvh4tMejlbxL7/P3i/Mvw1TFqbqzlW0JKsgFLCfXMZCtqKhUzv0mIIDTKIaheB2Wp6aObeiioNiPFqeiUExz1hcSShB1Mt1VDMx9QUbxiaHxD4XWuBTQ3Z4oAUwYzBNuN+Xm/GKp3v7H+MEgxBwkYukhBWGST7ElbSRl9IsrC/IJvVpl/oZNjtyYtZX3kqi9+GaBoaN12YsX9p9wX7VLh/zTJ0LMOcZK0cbg7MYiCbw3Fl1Azg7cS0SKu6Z2VpnwsNRu5cOlfmX7J0SkTs/WoBV66qkfrjf+VpeLWTPRL1ZpPf+DrhTiD3/3xGT4="},{default:o(()=>[b,h]),_:1}),g,t(a,{id:"code-demo-303",type:"normal",title:"%E7%A4%BA%E4%BE%8B",code:"eJyVkbFOwzAQhl/l8NJUVG6DAFWh7QCqBBIsMLB4SeOjhLpnhJ1WqOrIysrGxsjEA/A0IHgLbCcVLRVCLJbl+//vP9/N2KUdK5awzqCwVhPksitYpokws4L1Pl4f3++fOs2y2hO0qlPaoFO93b18PjwvqViDXRlHVWhhaqALVCi1J0iQ1FkxRrJ8iLav0F/3b49kVKsya3WeStmfuPfj3FgkvHE1lWejWgMuCsps7tKjOswEQcXGKZzj4ExnI7SRYFOTNJvxVsy3Wzze3eFxO2m3Wy3B6qED7+Ka9DWSMy+QETok+CqAa8VohVzpocMdlI352ODhnHtUpXUsgySd7hCV0t+NmI0yEGAezhA6RmPSIf7MXY8FwU4xw3yCEk5KU+LeYBOQy9Sma+Swir+5K98JHhl+s6DN3ZBTZbAc1e/L8s7/rooHV+TRyzFs/gV+JNpa"},{default:o(()=>[f,y]),_:1}),w,x,u(" to be updated "),T,S,j,E,P])}const B=p(k,[["render",L],["__file","network.html.vue"]]);export{B as default};
