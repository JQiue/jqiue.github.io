const e=JSON.parse(`{"key":"v-6d06dd88","path":"/ds-algorithm/recursion.html","title":"递归和回溯","lang":"zh-CN","frontmatter":{"title":"递归和回溯","category":["数据结构与算法"],"article":false,"description":"递归是一种解决问题的方法，它从解决问题的各个小部分开始，直到解决最初的大问题。递归通常涉及函数调用自身，如果没有基线条件，会不断地递归下去，所以每个递归都有一个不再递归调用的条件，防止无限递归\\r 要理解递归，就要先理解递归 用 JavaScript 来实现这句话，understandRecursion()函数会不断的调用自身，直到answer为真，an...","head":[["meta",{"property":"og:url","content":"https://jqiue.github.io/ds-algorithm/recursion.html"}],["meta",{"property":"og:site_name","content":"JQiue's notes"}],["meta",{"property":"og:title","content":"递归和回溯"}],["meta",{"property":"og:description","content":"递归是一种解决问题的方法，它从解决问题的各个小部分开始，直到解决最初的大问题。递归通常涉及函数调用自身，如果没有基线条件，会不断地递归下去，所以每个递归都有一个不再递归调用的条件，防止无限递归\\r 要理解递归，就要先理解递归 用 JavaScript 来实现这句话，understandRecursion()函数会不断的调用自身，直到answer为真，an..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-10-31T09:26:16.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-10-31T09:26:16.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"回溯","slug":"回溯","link":"#回溯","children":[]}],"git":{"createdTime":1646459606000,"updatedTime":1667208376000,"contributors":[{"name":"JQiue","email":"861947542@qq.com","commits":4},{"name":"JQiue","email":"jqiue@foxmail.com","commits":1}]},"readingTime":{"minutes":2.8,"words":841},"autoDesc":true,"localizedDate":"2022年3月5日","filePathRelative":"ds-algorithm/recursion.md"}`);export{e as data};
