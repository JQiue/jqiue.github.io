import{ac as s,A as a,B as p,E as t,ae as n}from"./framework.a879f165.js";const o={},e=n(`<p>MongoDB 是面向文档的非关系型数据库管理系统，并不是传统的关系数据库，基本的思路就是将“行”（row）的概念换成更加灵活的“文档”（document）模型。MongoDB 是基于 JSON，而面向文档的方式可以将文档或数组内嵌进来，所以一条记录可以表示非常复杂的关系。学习 MongoDB 需要具备一定的 JavaScript 和 JSON 基础</p><p>在开始操作之前必须先了解几个概念：</p><ul><li>数据库（Database）</li><li>集合（Collection）：相当于关系型数据库中的表</li><li>文档（Document）：相当于关系型数据库中的记录</li></ul><p>在 NoSQL 中，操作数据库都是通过指令或程序语言来完成的，在 MongoDB 中就是使用 JavaScript 来完成大部分操作</p><h2 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h2><p>首先在终端上输入<code>mongo</code>命令进入 MongoDB 命令行程序，退出使用<code>eixt</code>命令</p><p>输入<code>show databases</code>用于显示已创建的数据库，也可以使用缩写形式<code>show dbs</code>，如果没有出现意外，将得到三个默认的数据库：</p><ul><li>admin</li><li>config</li><li>local</li></ul><p>使用<code>use</code>关键字切换当前使用的数据库，当<code>use</code>不存在的数据库时不会报错，会隐式的创建一个数据库，但只有在创建集合的时候才会显示这个数据库，所以这个时候使用<code>show databases</code>是不会显示的</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">use</span> database_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>db.stats()</code>方法会将该数据库的状态返回，这里<code>db</code>就代表之前<code>use</code>过的数据库，是的，这和程序语言中的对象一样。<code>db.dropDatabase()</code>用于删除当前数据库</p><p><code>db.createCollection(name)</code>方法会在当前数据库下创建一个集合，现在这个数据库中已经具有了结构，可以使用<code>show dbs</code>查看了，相应的，<code>show collections</code>会显示当前数据库中所有的集合</p><p>如果对集合名字不满意，可以使用<code>db.集合名.renameCollection(新集合名)</code>进行修改。注意，之前创建的集合，相当于当前<code>db</code>的属性了，这超级简单，那么删除该集合也是类似的写法，<code>db.集合名.drop()</code>。对应的，想要查看当前集合的状态，也可以使用<code>db.集合名.stats()</code></p><p><code>db.集合名.insert()</code>可以插入一条数据，格式为键值对形式，为了方便，MongoDB 允许插入时 key 不加引号，会自动加上</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果没有创建数据库以及集合，这条语句也会隐式的创建一个数据库和对应的集合，非常高效</p></div><p><code>db.集合名.find()</code>会查询该集合下的所有数据，不出意外的情况下，上述插入命令后的结果应该是这样的：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121b78bd865c5bcee1308af&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;zs&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;男&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>发现除了自己指定的数据以外还有一个自动生成的<code>_id</code>键，如果不指定这个键，MongoDB 会为每条数据添加一个唯一的<code>_id</code>键，但并不推荐手动指定它</p><div class="custom-container tip"><p class="custom-container-title">_id 的组成</p><p><code>_id</code>的值由时间戳，机器码，PID，计数器组成，所以它是全球唯一的都不过分</p></div><p>也可以使用传递数组的方式来插入多条数据：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在<code>db.集合名</code>具有的方法：</p><ul><li>count()：返回文档数量</li><li>stats()：返回集合的状态</li><li>remove()：删除数据</li><li>find()：查询数据</li></ul><h2 id="javascript-支持" tabindex="-1"><a class="header-anchor" href="#javascript-支持" aria-hidden="true">#</a> JavaScript 支持</h2><p>MongoDB 底层是用 JavaScript 引擎实现的，支持部分 JavaScript 语法，于是：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="带条件的操作" tabindex="-1"><a class="header-anchor" href="#带条件的操作" aria-hidden="true">#</a> 带条件的操作</h2><p><code>db.集合名.find()</code>可以查看该集合中的数据，如果不传入参数，将会查询所有的数据，现在开始对下面的数据进行待条件的查询</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;IT&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;金融&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ww&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;IT&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;学生&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;学生&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>find()</code>方法的第一个参数用来进行条件查询，传入一个对象，比如：</p><ul><li>查询指定的数据：<code>db.users.find({name: &#39;zs&#39;})</code></li><li>查询某个范围的数据：<code>db.users.find({age: {$gt: 18}})</code></li></ul><p>这是一部分运算符：</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>$gt</td><td>大于</td></tr><tr><td>$gte</td><td>大于等于</td></tr><tr><td>$lt</td><td>小于</td></tr><tr><td>$lte</td><td>小于等于</td></tr><tr><td>$ne</td><td>不等于</td></tr><tr><td>$in</td><td>值在一个范围内（数组）</td></tr><tr><td>$nin</td><td>值不在一个范围中（数组）</td></tr><tr><td>$inc</td><td>递增</td></tr><tr><td>$rename</td><td>重命名列</td></tr><tr><td>$set</td><td>修改列值</td></tr><tr><td>$unset</td><td>删除列</td></tr><tr><td>/Reg/</td><td>正则表达式</td></tr><tr><td>$or</td><td>或</td></tr></tbody></table><p>第二个参数可以控制查询的返回列，如果<code>{列名:1/true}</code>，则只查询该列数据，如果<code>{列名:0/false}</code>，则查询除了该列以外的所有列的数据。当条件参数省略时，必须传入一个空对象，比如<code>db.集合名.find({}, {列名:0})</code>，如果想要去除<code>_id</code>，则应该这样<code>db.集合名.find({}, {_id: 0})</code></p><p>还有一个特殊的方法<code>distinct(列)</code>用来查询该列中所有不同的值，有相同的值会去除</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token string">&quot;job&quot;</span><span class="token punctuation">)</span>

<span class="token comment">/* Result */</span>
<span class="token punctuation">[</span> <span class="token string">&quot;IT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;学生&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;金融&quot;</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>既然是用对象来控制查询方式，而对象是一种复杂结构，也就存在复杂的查询条件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* age 大于 18，并且 job 为 &#39;IT&#39; 的数据 */</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;IT&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* age 大于 18，或者 job 为 &#39;IT&#39; 的数据 */</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">$or</span><span class="token operator">:</span> <span class="token punctuation">[</span> 
    <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;IT&#39;</span><span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档方法" tabindex="-1"><a class="header-anchor" href="#文档方法" aria-hidden="true">#</a> 文档方法</h2><p><code>sort()</code>会根据指定字段进行升序或降序排序</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 按照 age 升序 */</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">1</span></span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c641b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;学生&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c641c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;学生&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c6418&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;zs&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;IT&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c6419&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ls&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;金融&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c641a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ww&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;IT&quot;</span> <span class="token punctuation">}</span>

<span class="token comment">/* 按照 age 降序 */</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span></span><span class="token punctuation">)</span>

<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c641a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ww&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;IT&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c6419&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ls&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;金融&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c6418&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;zs&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;IT&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c641b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;学生&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;6121c02f7f81f8150f9c641c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;gender&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;job&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;学生&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>limit()</code>用来截取指定的数据，当为正数时，正着取，为负时倒着取</p><p><code>skip()</code>用来绕过一些数据，当为正数时，正着绕，为负时倒着绕</p><p><code>findOne()</code>和<code>find()</code>相比它只查询一条数据，其他的没有什么区别</p><h2 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h2><p><code>update(&lt;filter&gt;, &lt;update&gt;, &lt;option&gt;)</code>方法用于更新数据，<code>&lt;filter&gt;</code>用于过滤一些信息，如果传入空对象会对所有的数据进行更新，<code>&lt;update&gt;</code>用于设置需要更新的数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 更新 name 为 bar 的 age 为 19 */</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token punctuation">{</span> <span class="token literal-property property">$set</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意，不使用<code>$set</code>运算符直接更新字段的数据，会导致该数据的所有字段变成指定的样子，这非常危险，除<code>_id</code>以外的字段都会变成新的</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 更新 name 为 bar 的字段，该数据的所有字段都被清除，只剩下 age: 19 */</span>
db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">19</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>update</code>方法只会更新匹配到所有数据中的第一条，如果想要更新匹配到的所有数据，就要添加第三个参数<code>{ multi: true }</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;IT&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">$set</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">job</span><span class="token operator">:</span> <span class="token string">&#39;程序员&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">multi</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="建立索引" tabindex="-1"><a class="header-anchor" href="#建立索引" aria-hidden="true">#</a> 建立索引</h2>`,54),c=n(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>mobiles<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">brand</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">market</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">weight</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> 
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">screen</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">resolution</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dpi</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">material</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">refresh</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">camera</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">front</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rear</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">os</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">cpu</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gpu</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ram</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rom</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">battery</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">capacity</span><span class="token operator">:</span>  <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">charge</span><span class="token operator">:</span>  <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">network</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">card</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">frequency</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">Highlights</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function r(l,i){return a(),p("div",null,[e,t(" more "),c])}const k=s(o,[["render",r],["__file","mongodb.html.vue"]]);export{k as default};
